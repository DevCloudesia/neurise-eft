{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Programs/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport TestPage from './components/TestPage';\nimport Results from './components/Results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0); // 0 = welcome, 1-6 = test pages, 7 = results\n  const [answers, setAnswers] = useState([]); // Array to store answers by question index\n\n  const handleAnswer = (questionIndex, value) => {\n    setAnswers(prev => {\n      const newAnswers = [...prev];\n      newAnswers[questionIndex] = value;\n      return newAnswers;\n    });\n  };\n  const handleStartTest = () => {\n    setCurrentPage(1);\n  };\n  const handleNextPage = () => {\n    if (currentPage < 6) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      setCurrentPage(7); // Go to results\n    }\n  };\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const getProgress = () => {\n    if (currentPage === 0) return 0;\n    if (currentPage === 7) return 100;\n    return currentPage / 6 * 100;\n  };\n  const isPageComplete = () => {\n    if (currentPage === 0 || currentPage === 7) return true;\n\n    // Check if all questions on current page are answered\n    const startIndex = (currentPage - 1) * 9;\n    const endIndex = startIndex + 9;\n    for (let i = startIndex; i < endIndex; i++) {\n      if (answers[i] === undefined) {\n        return false;\n      }\n    }\n    return true;\n  };\n  if (currentPage === 0) {\n    return /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n      onStart: handleStartTest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  if (currentPage === 7) {\n    return /*#__PURE__*/_jsxDEV(Results, {\n      answers: answers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${getProgress()}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-info\",\n        children: [\"Page \", currentPage, \" of 6 | Questions \", (currentPage - 1) * 9 + 1, \"-\", currentPage * 9, \" of 54\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestPage, {\n        page: currentPage,\n        answers: answers,\n        onAnswer: handleAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handlePrevPage,\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleNextPage,\n          disabled: !isPageComplete(),\n          children: currentPage === 6 ? 'See Results' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WrKxmwxNBo/oVkni6MdApRE/mAA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WelcomeScreen","TestPage","Results","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","answers","setAnswers","handleAnswer","questionIndex","value","prev","newAnswers","handleStartTest","handleNextPage","handlePrevPage","getProgress","isPageComplete","startIndex","endIndex","i","undefined","onStart","fileName","_jsxFileName","lineNumber","columnNumber","className","children","style","width","page","onAnswer","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/admin/Programs/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport TestPage from './components/TestPage';\nimport Results from './components/Results';\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(0); // 0 = welcome, 1-6 = test pages, 7 = results\n  const [answers, setAnswers] = useState([]); // Array to store answers by question index\n\n  const handleAnswer = (questionIndex, value) => {\n    setAnswers(prev => {\n      const newAnswers = [...prev];\n      newAnswers[questionIndex] = value;\n      return newAnswers;\n    });\n  };\n\n  const handleStartTest = () => {\n    setCurrentPage(1);\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < 6) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      setCurrentPage(7); // Go to results\n    }\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const getProgress = () => {\n    if (currentPage === 0) return 0;\n    if (currentPage === 7) return 100;\n    return (currentPage / 6) * 100;\n  };\n\n  const isPageComplete = () => {\n    if (currentPage === 0 || currentPage === 7) return true;\n    \n    // Check if all questions on current page are answered\n    const startIndex = (currentPage - 1) * 9;\n    const endIndex = startIndex + 9;\n    \n    for (let i = startIndex; i < endIndex; i++) {\n      if (answers[i] === undefined) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  if (currentPage === 0) {\n    return <WelcomeScreen onStart={handleStartTest} />;\n  }\n\n  if (currentPage === 7) {\n    return <Results answers={answers} />;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <div className=\"progress-bar\">\n          <div className=\"progress-fill\" style={{ width: `${getProgress()}%` }}></div>\n        </div>\n        \n        <div className=\"page-info\">\n          Page {currentPage} of 6 | Questions {((currentPage - 1) * 9) + 1}-{currentPage * 9} of 54\n        </div>\n\n        <TestPage\n          page={currentPage}\n          answers={answers}\n          onAnswer={handleAnswer}\n        />\n\n        <div className=\"navigation\">\n          <button\n            className=\"btn btn-secondary\"\n            onClick={handlePrevPage}\n            disabled={currentPage === 1}\n          >\n            Previous\n          </button>\n          \n          <button\n            className=\"btn btn-primary\"\n            onClick={handleNextPage}\n            disabled={!isPageComplete()}\n          >\n            {currentPage === 6 ? 'See Results' : 'Next'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
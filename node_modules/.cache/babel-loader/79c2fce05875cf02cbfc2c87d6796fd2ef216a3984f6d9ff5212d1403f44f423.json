{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Programs/src/components/TestPage.js\";\nimport React from 'react';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestPage = ({\n  page,\n  answers,\n  onAnswer,\n  shuffledQuestions,\n  debugMode\n}) => {\n  // Get 9 questions for current page from shuffled questions\n  const startIndex = (page - 1) * 9;\n  const endIndex = startIndex + 9;\n  const pageQuestions = shuffledQuestions.slice(startIndex, endIndex);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: pageQuestions.map((question, index) => {\n      const questionIndex = startIndex + index;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [debugMode && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '-10px',\n            right: '0',\n            background: '#ef4444',\n            color: 'white',\n            padding: '2px 8px',\n            borderRadius: '4px',\n            fontSize: '10px',\n            fontFamily: 'monospace',\n            zIndex: 10\n          },\n          children: question.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Question, {\n          question: `${questionIndex + 1}. ${question.text}`,\n          selectedAnswer: answers[questionIndex],\n          onAnswer: value => onAnswer(questionIndex, value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["React","Question","jsxDEV","_jsxDEV","TestPage","page","answers","onAnswer","shuffledQuestions","debugMode","startIndex","endIndex","pageQuestions","slice","children","map","question","index","questionIndex","style","position","top","right","background","color","padding","borderRadius","fontSize","fontFamily","zIndex","category","fileName","_jsxFileName","lineNumber","columnNumber","text","selectedAnswer","value","id","_c","$RefreshReg$"],"sources":["/Users/admin/Programs/src/components/TestPage.js"],"sourcesContent":["import React from 'react';\nimport Question from './Question';\n\nconst TestPage = ({ page, answers, onAnswer, shuffledQuestions, debugMode }) => {\n  // Get 9 questions for current page from shuffled questions\n  const startIndex = (page - 1) * 9;\n  const endIndex = startIndex + 9;\n  const pageQuestions = shuffledQuestions.slice(startIndex, endIndex);\n\n  return (\n    <div>\n      {pageQuestions.map((question, index) => {\n        const questionIndex = startIndex + index;\n        return (\n          <div key={question.id} style={{ position: 'relative' }}>\n            {debugMode && (\n              <div style={{\n                position: 'absolute',\n                top: '-10px',\n                right: '0',\n                background: '#ef4444',\n                color: 'white',\n                padding: '2px 8px',\n                borderRadius: '4px',\n                fontSize: '10px',\n                fontFamily: 'monospace',\n                zIndex: 10\n              }}>\n                {question.category}\n              </div>\n            )}\n            <Question\n              question={`${questionIndex + 1}. ${question.text}`}\n              selectedAnswer={answers[questionIndex]}\n              onAnswer={(value) => onAnswer(questionIndex, value)}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default TestPage; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,QAAQ;EAAEC,iBAAiB;EAAEC;AAAU,CAAC,KAAK;EAC9E;EACA,MAAMC,UAAU,GAAG,CAACL,IAAI,GAAG,CAAC,IAAI,CAAC;EACjC,MAAMM,QAAQ,GAAGD,UAAU,GAAG,CAAC;EAC/B,MAAME,aAAa,GAAGJ,iBAAiB,CAACK,KAAK,CAACH,UAAU,EAAEC,QAAQ,CAAC;EAEnE,oBACER,OAAA;IAAAW,QAAA,EACGF,aAAa,CAACG,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAK;MACtC,MAAMC,aAAa,GAAGR,UAAU,GAAGO,KAAK;MACxC,oBACEd,OAAA;QAAuBgB,KAAK,EAAE;UAAEC,QAAQ,EAAE;QAAW,CAAE;QAAAN,QAAA,GACpDL,SAAS,iBACRN,OAAA;UAAKgB,KAAK,EAAE;YACVC,QAAQ,EAAE,UAAU;YACpBC,GAAG,EAAE,OAAO;YACZC,KAAK,EAAE,GAAG;YACVC,UAAU,EAAE,SAAS;YACrBC,KAAK,EAAE,OAAO;YACdC,OAAO,EAAE,SAAS;YAClBC,YAAY,EAAE,KAAK;YACnBC,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE,WAAW;YACvBC,MAAM,EAAE;UACV,CAAE;UAAAf,QAAA,EACCE,QAAQ,CAACc;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CACN,eACD/B,OAAA,CAACF,QAAQ;UACPe,QAAQ,EAAE,GAAGE,aAAa,GAAG,CAAC,KAAKF,QAAQ,CAACmB,IAAI,EAAG;UACnDC,cAAc,EAAE9B,OAAO,CAACY,aAAa,CAAE;UACvCX,QAAQ,EAAG8B,KAAK,IAAK9B,QAAQ,CAACW,aAAa,EAAEmB,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC;MAAA,GArBMlB,QAAQ,CAACsB,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAsBhB,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACK,EAAA,GAtCInC,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
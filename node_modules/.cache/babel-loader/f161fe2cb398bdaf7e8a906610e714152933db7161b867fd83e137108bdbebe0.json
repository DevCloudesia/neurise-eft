{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Programs/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport TestPage from './components/TestPage';\nimport Results from './components/Results';\nimport { QUESTIONS } from './data/questions';\n\n// Fisher-Yates shuffle algorithm\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst shuffleArray = array => {\n  const shuffled = [...array];\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled;\n};\nfunction App() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0); // 0 = welcome, 1-6 = test pages, 7 = results\n  const [answers, setAnswers] = useState([]); // Array to store answers by question index\n  const [shuffledQuestions, setShuffledQuestions] = useState([]);\n  const [debugMode, setDebugMode] = useState(false);\n\n  // Shuffle questions on app load\n  useEffect(() => {\n    setShuffledQuestions(shuffleArray(QUESTIONS));\n  }, []);\n\n  // Keyboard shortcut for debug mode (Ctrl+Shift+D)\n  const handleKeyDown = useCallback(event => {\n    if (event.ctrlKey && event.shiftKey && event.key === 'D') {\n      event.preventDefault();\n      setDebugMode(prev => !prev);\n      console.log(`Debug mode ${!debugMode ? 'enabled' : 'disabled'}`);\n    }\n  }, [debugMode]);\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n  const handleAnswer = (questionIndex, value) => {\n    setAnswers(prev => {\n      const newAnswers = [...prev];\n      newAnswers[questionIndex] = value;\n      return newAnswers;\n    });\n  };\n  const handleStartTest = () => {\n    setCurrentPage(1);\n  };\n  const handleNextPage = () => {\n    if (currentPage < 6) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      setCurrentPage(7); // Go to results\n    }\n  };\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  const getProgress = () => {\n    if (currentPage === 0) return 0;\n    if (currentPage === 7) return 100;\n    return currentPage / 6 * 100;\n  };\n  const isPageComplete = () => {\n    if (currentPage === 0 || currentPage === 7) return true;\n\n    // Check if all questions on current page are answered\n    const startIndex = (currentPage - 1) * 9;\n    const endIndex = startIndex + 9;\n    for (let i = startIndex; i < endIndex; i++) {\n      if (answers[i] === undefined) {\n        return false;\n      }\n    }\n    return true;\n  };\n  if (currentPage === 0) {\n    return /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n      onStart: handleStartTest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  }\n  if (currentPage === 7) {\n    return /*#__PURE__*/_jsxDEV(Results, {\n      answers: answers,\n      shuffledQuestions: shuffledQuestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [debugMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: '20px',\n          right: '20px',\n          background: '#1f2937',\n          color: 'white',\n          padding: '10px 15px',\n          borderRadius: '8px',\n          fontSize: '12px',\n          zIndex: 1000,\n          fontFamily: 'monospace'\n        },\n        children: \"DEBUG MODE ON (Ctrl+Shift+D to toggle)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-fill\",\n          style: {\n            width: `${getProgress()}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-info\",\n        children: [\"Page \", currentPage, \" of 6 | Questions \", (currentPage - 1) * 9 + 1, \"-\", currentPage * 9, \" of 54\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestPage, {\n        page: currentPage,\n        answers: answers,\n        onAnswer: handleAnswer,\n        shuffledQuestions: shuffledQuestions,\n        debugMode: debugMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handlePrevPage,\n          disabled: currentPage === 1,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: handleNextPage,\n          disabled: !isPageComplete(),\n          children: currentPage === 6 ? 'See Results' : 'Next'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FvGos7Pexu4fkRfFgiuqbzhT78k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","WelcomeScreen","TestPage","Results","QUESTIONS","jsxDEV","_jsxDEV","shuffleArray","array","shuffled","i","length","j","Math","floor","random","App","_s","currentPage","setCurrentPage","answers","setAnswers","shuffledQuestions","setShuffledQuestions","debugMode","setDebugMode","handleKeyDown","event","ctrlKey","shiftKey","key","preventDefault","prev","console","log","document","addEventListener","removeEventListener","handleAnswer","questionIndex","value","newAnswers","handleStartTest","handleNextPage","handlePrevPage","getProgress","isPageComplete","startIndex","endIndex","undefined","onStart","fileName","_jsxFileName","lineNumber","columnNumber","className","children","style","position","top","right","background","color","padding","borderRadius","fontSize","zIndex","fontFamily","width","page","onAnswer","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/admin/Programs/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport WelcomeScreen from './components/WelcomeScreen';\nimport TestPage from './components/TestPage';\nimport Results from './components/Results';\nimport { QUESTIONS } from './data/questions';\n\n// Fisher-Yates shuffle algorithm\nconst shuffleArray = (array) => {\n  const shuffled = [...array];\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  return shuffled;\n};\n\nfunction App() {\n  const [currentPage, setCurrentPage] = useState(0); // 0 = welcome, 1-6 = test pages, 7 = results\n  const [answers, setAnswers] = useState([]); // Array to store answers by question index\n  const [shuffledQuestions, setShuffledQuestions] = useState([]);\n  const [debugMode, setDebugMode] = useState(false);\n\n  // Shuffle questions on app load\n  useEffect(() => {\n    setShuffledQuestions(shuffleArray(QUESTIONS));\n  }, []);\n\n  // Keyboard shortcut for debug mode (Ctrl+Shift+D)\n  const handleKeyDown = useCallback((event) => {\n    if (event.ctrlKey && event.shiftKey && event.key === 'D') {\n      event.preventDefault();\n      setDebugMode(prev => !prev);\n      console.log(`Debug mode ${!debugMode ? 'enabled' : 'disabled'}`);\n    }\n  }, [debugMode]);\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  const handleAnswer = (questionIndex, value) => {\n    setAnswers(prev => {\n      const newAnswers = [...prev];\n      newAnswers[questionIndex] = value;\n      return newAnswers;\n    });\n  };\n\n  const handleStartTest = () => {\n    setCurrentPage(1);\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < 6) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      setCurrentPage(7); // Go to results\n    }\n  };\n\n  const handlePrevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  const getProgress = () => {\n    if (currentPage === 0) return 0;\n    if (currentPage === 7) return 100;\n    return (currentPage / 6) * 100;\n  };\n\n  const isPageComplete = () => {\n    if (currentPage === 0 || currentPage === 7) return true;\n    \n    // Check if all questions on current page are answered\n    const startIndex = (currentPage - 1) * 9;\n    const endIndex = startIndex + 9;\n    \n    for (let i = startIndex; i < endIndex; i++) {\n      if (answers[i] === undefined) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  if (currentPage === 0) {\n    return <WelcomeScreen onStart={handleStartTest} />;\n  }\n\n  if (currentPage === 7) {\n    return <Results answers={answers} shuffledQuestions={shuffledQuestions} />;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        {debugMode && (\n          <div style={{\n            position: 'fixed',\n            top: '20px',\n            right: '20px',\n            background: '#1f2937',\n            color: 'white',\n            padding: '10px 15px',\n            borderRadius: '8px',\n            fontSize: '12px',\n            zIndex: 1000,\n            fontFamily: 'monospace'\n          }}>\n            DEBUG MODE ON (Ctrl+Shift+D to toggle)\n          </div>\n        )}\n        \n        <div className=\"progress-bar\">\n          <div className=\"progress-fill\" style={{ width: `${getProgress()}%` }}></div>\n        </div>\n        \n        <div className=\"page-info\">\n          Page {currentPage} of 6 | Questions {((currentPage - 1) * 9) + 1}-{currentPage * 9} of 54\n        </div>\n\n        <TestPage\n          page={currentPage}\n          answers={answers}\n          onAnswer={handleAnswer}\n          shuffledQuestions={shuffledQuestions}\n          debugMode={debugMode}\n        />\n\n        <div className=\"navigation\">\n          <button\n            className=\"btn btn-secondary\"\n            onClick={handlePrevPage}\n            disabled={currentPage === 1}\n          >\n            Previous\n          </button>\n          \n          <button\n            className=\"btn btn-primary\"\n            onClick={handleNextPage}\n            disabled={!isPageComplete()}\n          >\n            {currentPage === 6 ? 'See Results' : 'Next'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}